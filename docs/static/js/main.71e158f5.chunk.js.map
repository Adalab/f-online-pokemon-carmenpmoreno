{"version":3,"sources":["components/Filter.js","components/Card.js","components/List.js","components/Home.js","services/fetchPokemon.js","components/Detail.js","components/App.js","index.js"],"names":["Filter","_this$props","this","props","onInputChange","inputValue","react_default","a","createElement","className","type","placeholder","onChange","value","React","Component","Card","name","image","id","types","specie","src","alt","concat","map","key","slot","pokemonSpecie","evolves_from_species","console","log","List","data","length","sort","b","filter","item","inputValueLowerCase","toLowerCase","includes","react_router_dom","to","src_components_Card","sprites","front_default","species_data","Home","src_components_Filter","src_components_List","fetchPokemon","fetch","then","response","json","Detail","match","params","pokemonId","height","weight","abilities","ability","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","fetchPokemonOk","getPokemons","bind","assertThisInitialized","handleInputChange","getSpecies","_this2","results","forEach","url","pokemonData","setState","prevState","toConsumableArray","speciesUrl","species","speciesData","event","target","objectSpread","_this3","_this$state","react_router","exact","path","render","src_components_Home","routerProps","src_components_Detail","ReactDOM","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.71e158f5.chunk.js","sourcesContent":["import React from 'react';\nimport './Filter.scss';\nimport PropTypes from 'prop-types';\n\nclass Filter extends React.Component {\n    render() {\n        const { onInputChange, inputValue } = this.props;\n        return (\n            <form>\n                <label className=\"labelFilter\">Filtro por nombre</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"Busca tu pokemon favorito por nombre\"\n                    className=\"nameFilter\"\n                    onChange={onInputChange}\n                    value={inputValue}\n                />\n            </form>\n\n        );\n    }\n}\n\nFilter.propTypes = {\n    onInputChange: PropTypes.func,\n    inputValue: PropTypes.string,\n}\n\nexport default Filter;","import React from 'react';\nimport './Card.scss';\nimport PropTypes from 'prop-types';\n\n\nclass Card extends React.Component {\n\n\n    render() {\n        const { name, image, id, types, specie } = this.props;\n        // console.log(specie);\n        return (\n            <div className=\"card\">\n                <div className=\"card-up\">\n                    <img className=\"pokemonImage\" src={image} alt={name}></img>\n                    <h3 className=\"itemUpperCasse pokemonId\">{`id/${id}`}</h3>\n                </div>\n                <div className=\"card-down\">\n                    <h2 className=\"pokemonName\">{name}</h2>\n                    <ul className=\"pokemonTypes\">\n                        {types.map(type => {\n                            return (\n                                <li className=\"itemUpperCasse pokemonType\" key={type.slot}>{type.type.name}</li>\n                            );\n                        }\n                        )}\n                    </ul>\n                    <div>\n                        {!specie || specie.pokemonSpecie.evolves_from_species === null\n                            ? (console.log('este pokemon no tiene evolucion o no hay datos de especie'))\n                            : (<p className=\"evolution\">{`Evoluciona de: ${specie.pokemonSpecie.evolves_from_species.name}`}</p>)\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCard.propTypes = {\n    item: PropTypes.object,\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nimport './List.scss';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass List extends React.Component {\n\n    render() {\n        const { data, inputValue } = this.props;\n        return (\n            <ul className=\"pokemonList\">\n                {inputValue.length >= 3 || inputValue === \"\"\n                    ? (data\n                        .sort(function (a, b) {\n                            if(a.id > b.id) {\n                                return 1;\n                            }\n                            if (a.id < b.id) {\n                                return -1;\n                            } else {\n                                return 0;\n                            }\n                        })\n                        .filter(item => {\n                            const inputValueLowerCase = inputValue.toLowerCase();\n                            return (\n                                item.name.includes(inputValueLowerCase)\n                            );\n                        }\n                        )\n                        .map(item => {\n                            return (\n                                <li className=\"itemList\" key={item.id} id={item.id}>\n                                    <Link className=\"itemList__link\" to={`/pokemon-detail/${item.id}`}>\n                                        <Card\n                                            name={item.name}\n                                            image={item.sprites.front_default}\n                                            id={item.id}\n                                            types={item.types}\n                                            specie={item.species_data}\n                                        />\n                                    </Link>\n                                </li>);\n\n                        })\n                    )\n                    : (<p className=\"chooseParagraph\">¡Sigue buscando!</p>)\n\n                }\n\n            </ul>\n        );\n    }\n}\n\nList.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    inputValue: PropTypes.string,\n    specie: PropTypes.objectOf(PropTypes.object),\n}\n\nexport default List;","import React from 'react';\nimport Filter from './Filter';\nimport List from './List';\nimport './Home.scss';\nimport PropTypes from 'prop-types';\n\nclass Home extends React.Component {\n    render() {\n        const { data, onInputChange, inputValue } = this.props;\n        return (\n            <main className=\"homePage\">\n                <Filter\n                    onInputChange={onInputChange}\n                    inputValue={inputValue}\n                />\n                <List\n                    data={data}\n                    inputValue={inputValue}\n                />\n            </main>\n\n        );\n    }\n}\nHome.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    onInputChange: PropTypes.func,\n    inputValue: PropTypes.string,\n    fetchOk: PropTypes.bool,\n    evolutionData: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default Home;","const pokemonUrl = 'https://pokeapi.co/api/v2/pokemon/?limit=25';\n\nconst fetchPokemon = () => {\n    return (\n        fetch(pokemonUrl)\n            .then(response => response.json())\n    );\n}\nexport default fetchPokemon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Detail.scss';\n// import fetchEvolution from '../services/fetchEvolution';\nimport { Link } from 'react-router-dom';\n\nclass Detail extends React.Component {\n\n    render() {\n        const { data } = this.props;\n        const { pokemonId } = this.props.match.params;\n        const item = data[pokemonId - 1];\n        const { name, height, weight, abilities, id } = item;\n        const image = item.sprites.front_default;\n\n        return (\n            <div className=\"detailContainer\">\n                <header>\n                    <nav className=\"navContainer\">\n                        <button className=\"backButton\"><Link className=\"backButton__link\" to=\"/\">volver</Link></button>\n                    </nav>\n                </header>\n                <main className=\"mainCard\">\n                    <h1 className=\"mainCard__title\">{name}</h1>\n                    <h2 className=\"mainCard__profileTitle\">Perfil</h2>\n                    <ul className=\"profileList\">\n                        <li className=\"profileList__item\">{`altura: ${height}`}</li>\n                        <li className=\"profileList__item\">{`peso: ${weight}`}</li>\n                        <li className=\"profileList__item\">\n                            Habilidades\n                        <ul className=\"profileList__abilitiesList\">\n                                {abilities.map(item => {\n                                    return (<li className=\"abilitiesList__item\" key={item.slot}>{`${item.ability.name},`}</li>);\n                                })}\n                            </ul>\n                        </li>\n                        <li className=\"profileList__item\">\n                            <ul className=\"imagesList\">\n                                <li className=\"imagesList__item\">\n                                    <img className=\"pokemonImage\" src={image} alt={name}></img>\n                                </li>\n                                {/* <li>\n                                    {/* {fetchEvolution(id)\n                                ?(console.log('tenemos fetchEvolution'))\n                                :(console.log('NO tenemos fetchEvolution'))\n                                } */}\n                                {/* </li> */} \n                            </ul>\n                        </li>\n                    </ul>\n                </main>\n            </div>\n        );\n    }\n}\n\nDetail.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    match: PropTypes.object.isRequired,\n}\n\nexport default Detail;","import React from 'react';\nimport './App.scss';\nimport Home from './Home';\nimport fetchPokemon from '../services/fetchPokemon';\nimport { Route, Switch } from 'react-router-dom'\nimport Detail from './Detail';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      fetchPokemonOk: false,\n      inputValue: '',\n    };\n    this.getPokemons = this.getPokemons.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n  componentDidMount() {\n    this.getPokemons();\n  }\n  componentWillUpdate() {\n    if (this.state.data.length === 24) {\n      console.log('data ya está relleno');\n      this.getSpecies();\n      // this.getEvolutionImage();\n    }\n  }\n  // getEvolutionImage() {\n  //   // console.log('getEvolutionData');\n  //   const evolutionUrl = this.state.data.map(item => item.species_data.pokemonSpecie.evolution_chain.url)\n  //   fetch(evolutionUrl)\n  //   .then(response => response.json())\n  //   .then(data => {\n  //     console.log(data)\n  //   })\n  // }\n\n\ngetPokemons() {\n  fetchPokemon()\n    .then(data => {\n      return data.results.forEach(item => {\n        fetch(item.url)\n          .then(response => response.json())\n          .then(pokemonData => {\n            // to set pokemonData on state.data\n            return (\n              this.setState(prevState => {\n                return {\n                  data: [\n                    ...prevState.data,\n                    pokemonData],\n                  fetchPokemonOk: true,\n                }\n              })\n            )\n\n          })\n      });\n    })\n\n}\n\ngetSpecies() {\n  if (this.state.data.length === 24) {\n    this.state.data.map(item => {\n      const speciesUrl = item.species.url;\n      fetch(speciesUrl)\n        .then(response => response.json())\n        .then(speciesData => {\n          // to add speciesData on data (item.species_data.pokemonSpecie)\n          item.species_data = {\n            pokemonSpecie: speciesData\n          }\n        })\n    });\n  } else {\n    console.log('no hay info en data aún');\n  }\n}\n\nhandleInputChange(event) {\n  const { value } = event.target;\n  this.setState(prevState => {\n    return {\n      ...prevState,\n      inputValue: value\n    };\n  });\n}\n\nrender() {\n  const { data, fetchPokemonOk, inputValue } = this.state;\n  return (\n    <div className=\"App\">\n      {fetchPokemonOk\n        ? (<Switch>\n          <Route\n            exact path=\"/\"\n            render={() => (\n              <Home\n                data={data}\n                onInputChange={this.handleInputChange}\n                inputValue={inputValue}\n              />\n            )}\n          />\n          <Route\n            path=\"/pokemon-detail/:pokemonId\"\n            // component={Detail}\n            render={routerProps =>\n              <Detail\n                match={routerProps.match}\n                data={data}\n              />\n            }\n          />\n        </Switch>\n        )\n        : (<p>Loading ...</p>)\n      }\n    </div>\n  );\n}\n      }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>\n    , document.getElementById('root'));\n"],"sourceRoot":""}