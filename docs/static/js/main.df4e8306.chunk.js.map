{"version":3,"sources":["components/Filter.js","components/Card.js","components/List.js","components/Home.js","services/fetchPokemon.js","components/App.js","index.js"],"names":["Filter","_this$props","this","props","onInputChange","inputValue","react_default","a","createElement","className","type","placeholder","onChange","value","React","Component","Card","item","src","sprites","front_default","alt","name","concat","id","types","map","key","slot","List","data","fetchOk","length","filter","includes","src_components_Card","Home","src_components_Filter","src_components_List","fetchPokemon","fetch","then","response","json","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","getPokemons","bind","assertThisInitialized","handleInputChange","_this2","results","url","pokemonData","setState","prevState","toConsumableArray","event","target","console","log","objectSpread","_this$state","components_Home","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.df4e8306.chunk.js","sourcesContent":["import React from 'react';\nimport './Filter.scss';\n\nclass Filter extends React.Component {\n    render() {\n        const { onInputChange, inputValue } = this.props;\n        return (\n            <fieldset>\n                <label className=\"labelFilter\">Filtro por nombre</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"Busca tu pokemon favorito por nombre\"\n                    onChange={onInputChange}\n                    value={inputValue}\n                />\n            </fieldset>\n\n        );\n    }\n}\n\nexport default Filter;","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.Component {\n    render() {\n        const { item } = this.props;\n        return (\n            <div className=\"card\">\n                <img src={item.sprites.front_default} alt={item.name}></img>\n                <h3 className=\"itemUpperCasse\">{`id/${item.id}`}</h3>\n                <h2 className=\"pokemonName\">{item.name}</h2>\n                <ul>\n                    {item.types.map(type => {\n                        return (\n                            <li className=\"itemList itemUpperCasse\" key={type.slot}>{type.type.name}</li>\n                        );\n                    }\n                    )}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nimport './List.scss';\n\nclass List extends React.Component {\n\n    render() {\n        const { data, inputValue, fetchOk } = this.props;\n        return (\n            <ul>\n                {inputValue.length >= 3 & fetchOk\n                    ? (data\n                        .filter(item => {\n                            return (\n                                item.name.includes(inputValue)\n                            );\n                        }\n                        )\n                        .map(item => {\n                            return (\n                                <li className=\"itemList\" key={item.id}>\n                                    <Card\n                                        item={item}\n                                    />\n                                </li>\n                            );\n                        }))\n                    : (<p>Â¡Elige tu pokemon favorito!</p>)\n\n                }\n            </ul>\n        );\n    }\n}\n\nexport default List;","import React from 'react';\nimport Filter from './Filter';\nimport List from './List';\n\nclass Home extends React.Component {\n    render() {\n        const { data, onInputChange, inputValue, fetchOk} = this.props;\n        return (\n            <main>\n                <Filter\n                    onInputChange={onInputChange}\n                    inputValue={inputValue}\n                />\n                <List\n                    data={data}\n                    inputValue={inputValue}\n                    fetchOk={fetchOk}\n                />\n            </main>\n\n        );\n    }\n}\n\nexport default Home;","const PokemonUrl = 'https://pokeapi.co/api/v2/pokemon/?limit=25';\n\nconst fetchPokemon = () => {\n    return (\n        fetch(PokemonUrl)\n            .then(response => response.json())\n            // .then(data => {\n            //     console.log(data.results);\n            //     // PARA HACER FETCH DE CADA URL QUE ME devuelve el array de objetos de data\n            //     return data.results.map(item => {\n            //         return (\n            //             fetch(item.url)\n            //                 .then(response => response.json())\n            //                 .then(dataAllPokemon => {\n            //                     console.log(dataAllPokemon.name);\n            //                     return {\n            //                         nameAllPokemon: dataAllPokemon.name\n            //                     }\n            //                 })\n            //         );\n            //     });\n            // })\n    );\n}\nexport default fetchPokemon;","import React from 'react';\nimport './App.scss';\nimport Home from './Home';\nimport fetchPokemon from '../services/fetchPokemon';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      fetchOk: false,\n      inputValue: '',\n    };\n    this.getPokemons = this.getPokemons.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n  componentDidMount() {\n    this.getPokemons();\n  }\n  getPokemons() {\n    fetchPokemon()\n      .then(data => {\n        return data.results.map(item => {\n          fetch(item.url)\n            .then(response => response.json())\n            .then(pokemonData => {\n              return (\n                this.setState(prevState => {\n                  return {\n                    data:[\n                      ...prevState.data,\n                      pokemonData],\n                    fetchOk: true,\n                  }\n                })\n              )\n\n            })\n        });\n      })\n\n  }\n\n  handleInputChange(event) {\n    const { value } = event.target;\n    console.log(value);\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        inputValue: value\n      };\n    });\n  }\n\n  render() {\n    const { data, fetchOk, inputValue } = this.state;\n    // console.log('data en el estado', data);\n    return (\n      <div className=\"App\">\n        {fetchOk\n          ? (<Home\n            data={data}\n            fetchOk={fetchOk}\n            onInputChange={this.handleInputChange}\n            inputValue={inputValue}\n          />)\n          : (<p>Loading ...</p>)\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}